{"cells":[{"cell_type":"markdown","metadata":{"id":"_W15hoUn_-cb"},"source":["###### 2020-11-22 일요일\n","###### 2020-11-23 월요일"]},{"cell_type":"markdown","metadata":{"id":"IfiAG8oG_-Xw"},"source":["# 01_텍스트데이터토큰화 \u0026 토큰사전저장\n"," - 음절단위 토큰화 진행 과정에서 많은 시간이 소요된다\n"," - 그래서 의미없는 시간 손실을 줄이기 위해 음절단위 토큰화를 진행하고 음절단위 토큰사전을 json파일로 저장하고자 한다."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uJINtzqm0jQJ"},"outputs":[],"source":["import warnings\n","warnings.filterwarnings(action='ignore')\n","\n","import pandas as pd\n","import numpy as np\n","import re\n","import json\n","\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from sklearn.model_selection import train_test_split"]},{"cell_type":"markdown","metadata":{"id":"VssFkduo0e5O"},"source":["## 1. 데이터 불러오기"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9JT1UAar0ee9"},"outputs":[],"source":["d1             = pd.read_csv('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/division_data1.csv')\n","d2             = pd.read_csv('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/division_data2.csv')\n","d3             = pd.read_csv('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/division_data3.csv', encoding='cp949')\n","d4             = pd.read_excel('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/division_data4.xlsx')\n","d5             = pd.read_excel('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/division_data5.csv')\n","d6             = pd.read_csv('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/division_data6.csv')\n","exist_label_df = pd.read_csv('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/raw_data/exist_label_df.csv')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p6AgI_gJ0ede"},"outputs":[],"source":["# 모든데이터 하나의 데이터프레임으로 합치기\n","df_list = [d1, d2, d3, d4, d5, d6, exist_label_df]\n","\n","all_df = d1\n","for df in df_list[1:]:\n","    all_df = pd.concat([all_df, df])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_1kskc4N0ebA"},"outputs":[],"source":["# 필요없는 열 제거\n","all_df.drop(['Unnamed: 0', '출처'], axis=1, inplace=True)\n","\n","# 라벨이 NaN인거 제거\n","index = all_df['악플여부'].isna()\n","raw_df = all_df[~index]\n","\n","# 인덱스 리셋\n","raw_df = raw_df.reset_index()\n","raw_df.drop(['index'], inplace=True, axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Oo5NpExR0eYV"},"outputs":[],"source":["# 원본유지 복사본 사용\n","copy_df = raw_df.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cTN2x4wV0eWQ"},"outputs":[],"source":["# 고정 시드값 지정\n","seed = 123\n","\n","# 댓글 길이 지정\n","comment_len = 400"]},{"cell_type":"markdown","metadata":{"id":"jxbEw-KV1JZ7"},"source":["##### 악플여부 라벨이 1인경우 제거\n"," - 악플여부 라벨이 1인경우(악플여부가 애매한 경우)는 사람에 따라 불쾌할수도 있고 아닐수도 있기 때문에 기준을 매기기가 애매하다.\n"," - 객관적인 기준을 매길수 없기 때문에 라벨이 1인경우 정확도가 떨어지는 현상을 보였다\n"," - 그래서 라벨이 1인경우를 제거한다"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rOOsFOAk0eT-"},"outputs":[],"source":["index = copy_df['악플여부'] == 1\n","copy_df = copy_df[~index]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ey0s5QsW0eRh"},"outputs":[],"source":["index = copy_df['악플여부'] == 2\n","copy_df.loc[index, '악플여부'] = 1"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q5nFXMKK0ePL"},"outputs":[],"source":["copy_df['악플여부'] = copy_df['악플여부'].apply(int)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2655,"status":"ok","timestamp":1606115666256,"user":{"displayName":"temp1 colab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgLPZNhzjqBlRHzKHMikrWsAsR8JU1oNR0Z1e0_=s64","userId":"01965468393575515127"},"user_tz":-540},"id":"mR-V2bM90eNF","outputId":"0565494f-4967-4692-9ffb-3cb630b1c783"},"outputs":[{"data":{"text/plain":["0    67399\n","1    14225\n","Name: 악플여부, dtype: int64"]},"execution_count":14,"metadata":{"tags":[]},"output_type":"execute_result"}],"source":["copy_df['악플여부'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l0Zf1EnX0eKe"},"outputs":[],"source":["copy_df['댓글'] = copy_df['댓글'].apply(str)"]},{"cell_type":"markdown","metadata":{"id":"dPU6IaTY1Ye2"},"source":["## 2. 토큰화 \u0026 저장\n"," - Train set, Test set을 나눈다\n"," - Train set을 기준으로 음절 토큰 사전을 만든다\n"," - Train set / Test set / 음절토큰사전을 저장한다\n","    - 이렇게 저장하는 이유는? : 매번 음절토큰사전을 만드는데 시간이 많이 소요되기 때문에 한번 만들어놓고 재사용하여 시간을 절약!\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"suVm1lU-1rPf"},"outputs":[],"source":["def tokenization_save(df):\n","\n","    feature = df['댓글']\n","    label = df['악플여부']\n","\n","    X_train, X_test, y_train, y_test = train_test_split(feature, label, \n","                                                    test_size=0.2,\n","                                                    random_state=seed)\n","    X_train_split = X_train.apply(list).tolist()\n","    X_train_token_list = sum(X_train_split, [])\n","    \n","    tokenizer = Tokenizer()\n","    tokenizer.fit_on_texts(X_train_token_list)\n","    \n","    word_index_vocab = tokenizer.word_index\n","\n","    return X_train, X_test, y_train, y_test, word_index_vocab\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gJXm_yRQ0eFz"},"outputs":[],"source":["def train_test_save(X_train, X_test, y_train, y_test) :\n","    save_df_list = [X_train, X_test, y_train, y_test]\n","    file_names = ['X_train', 'X_test', 'y_train', 'y_test']\n","    for idx, set in enumerate(save_df_list):\n","        set.to_csv('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/' + file_names[idx] + '.csv', encoding='UTF-8_SIG')\n","\n","\n","def save_word_index(word_index_vocab) :\n","    json_file = json.dumps(word_index_vocab, ensure_ascii=False)\n","    f = open('/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/word_index_vocab.json', 'w')\n","    f.write(json_file)\n","    f.close()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"1uW4OC9F0eIK"},"outputs":[],"source":["# 토큰화\n","X_train, X_test, y_train, y_test, word_index_vocab = tokenization_save(copy_df)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"RNTpftu3BsvP"},"outputs":[],"source":["# ' '(공백)도 사전에 포함 \n","word_index_vocab[' '] = len(word_index_vocab) + 1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"S0Mmkk900eDY"},"outputs":[{"ename":"FileNotFoundError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-20-a85f8ccdb3b0\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Train / Test 저장\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 2\u001b[0;31m \u001b[0mtrain_test_save\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# 음절단위토큰 저장\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0msave_word_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mword_index_vocab\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m\u003cipython-input-17-f5f2d9c963c9\u003e\u001b[0m in \u001b[0;36mtrain_test_save\u001b[0;34m(X_train, X_test, y_train, y_test)\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0mfile_names\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'X_train'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'X_test'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'y_train'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'y_test'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0midx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mset\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msave_df_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 5\u001b[0;31m         \u001b[0mset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mfile_names\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'UTF-8_SIG'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mto_csv\u001b[0;34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, line_terminator, chunksize, date_format, doublequote, escapechar, decimal, errors)\u001b[0m\n\u001b[1;32m   3168\u001b[0m             \u001b[0mdecimal\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdecimal\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3169\u001b[0m         )\n\u001b[0;32m-\u003e 3170\u001b[0;31m         \u001b[0mformatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3172\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mpath_or_buf\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/formats/csvs.py\u001b[0m in \u001b[0;36msave\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    188\u001b[0m                 \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    189\u001b[0m                 \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 190\u001b[0;31m                 \u001b[0mcompression\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompression_args\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompression\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    191\u001b[0m             )\n\u001b[1;32m    192\u001b[0m             \u001b[0mclose\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors)\u001b[0m\n\u001b[1;32m    491\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    492\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 493\u001b[0;31m             \u001b[0mf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnewline\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    494\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mis_text\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    495\u001b[0m             \u001b[0;31m# No explicit encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/[final_project]_악플원정대/01_K-Fold  - X/data/X_train.csv'"]}],"source":["# Train / Test 저장\n","train_test_save(X_train, X_test, y_train, y_test)\n","\n","# 음절단위토큰 저장\n","save_word_index(word_index_vocab)"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyPiKdjK02Rau7T2qBlkrZZ4","collapsed_sections":[],"mount_file_id":"1uWyj3bvnvNNVhlnVL25U59-5YHkZepyq","name":"01_텍스트데이터토큰화 \u0026 토큰사전저장","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}